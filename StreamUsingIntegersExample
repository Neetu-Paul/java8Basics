import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class StreamUsingIntegersExample {

    public static void main(String[] args) {
        List<Integer> integerList = Arrays.asList(2, 14, 2, 2, 9, 20);
        System.out.println("Input array is "+integerList);

        List<Integer> evenNumberList = integerList.stream().filter(p -> p%2 == 0)
                .collect(Collectors.toList());
        System.out.println("Even numbers from the list are "+evenNumberList);

        List<Integer> numbersStartingWithTwo = integerList.stream()
                .filter(p -> (p>9 && p<=99 && p.toString().startsWith("2")))
                .collect(Collectors.toList());
        System.out.println("Two digit numbers starting with two are "+numbersStartingWithTwo);

        List<Integer> uniqueNumbers = integerList.stream()
                .distinct().collect(Collectors.toList());
        System.out.println("Unique numbers in the list are "+uniqueNumbers);

        List<List<Integer>> listOfIntegersList = Arrays.asList(Arrays.asList(2),
                Arrays.asList(14,2,3), Arrays.asList(7,5), Arrays.asList(6,4));

        System.out.println("The list of list of integers is "+listOfIntegersList);
        List<Integer> flatIntegerStream = listOfIntegersList.stream()
                .flatMap(integers -> integers.stream()).collect(Collectors.toList());
        //System.out.println("The flattened list of integers is "+flatIntegerStream);
        System.out.println("The sum of the numbers in the list is "+
                flatIntegerStream.stream().reduce(0, Integer::sum));
    }
}
